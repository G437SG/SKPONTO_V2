"""Initial migration with local storage

Revision ID: 455b35124bab
Revises: 
Create Date: 2025-07-15 13:53:41.023363

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '455b35124bab'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('system_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chave', sa.String(length=100), nullable=False),
    sa.Column('valor', sa.Text(), nullable=False),
    sa.Column('descricao', sa.String(length=255), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chave')
    )
    op.create_table('system_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('component', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('last_check', sa.DateTime(), nullable=False),
    sa.Column('last_success', sa.DateTime(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=False),
    sa.Column('is_critical', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('cpf', sa.String(length=14), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('sobrenome', sa.String(length=100), nullable=False),
    sa.Column('telefone', sa.String(length=20), nullable=True),
    sa.Column('cargo', sa.String(length=100), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('user_type', sa.Enum('ADMIN', 'TRABALHADOR', 'ESTAGIARIO', name='usertype'), nullable=False),
    sa.Column('work_class_id', sa.Integer(), nullable=True),
    sa.Column('foto_perfil', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['work_class_id'], ['work_classes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_cpf'), ['cpf'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('work_classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('daily_work_hours', sa.Float(), nullable=False),
    sa.Column('lunch_hours', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('backup_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=True),
    sa.Column('backup_type', sa.Enum('MANUAL', 'AUTOMATICO', 'COMPLETO', 'INCREMENTAL', name='backuptype'), nullable=False),
    sa.Column('status', sa.Enum('PENDENTE', 'EM_PROGRESSO', 'CONCLUIDO', 'FALHOU', 'CANCELADO', name='backupstatus'), nullable=False),
    sa.Column('local_path', sa.String(length=500), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('file_uploads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.Column('download_count', sa.Integer(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tags', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('file_uploads', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_file_uploads_filename'), ['filename'], unique=False)

    op.create_table('hour_bank',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('current_balance', sa.Float(), nullable=False),
    sa.Column('total_credited', sa.Float(), nullable=False),
    sa.Column('total_debited', sa.Float(), nullable=False),
    sa.Column('last_transaction', sa.DateTime(), nullable=True),
    sa.Column('expiration_enabled', sa.Boolean(), nullable=False),
    sa.Column('expiration_months', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('medical_attestations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tipo', sa.Enum('MEDICO', 'ODONTOLOGICO', 'PSICOLOGICO', 'OUTROS', name='attestationtype'), nullable=False),
    sa.Column('data_inicio', sa.Date(), nullable=False),
    sa.Column('data_fim', sa.Date(), nullable=False),
    sa.Column('cid', sa.String(length=10), nullable=True),
    sa.Column('medico_clinica', sa.String(length=200), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('arquivo', sa.String(length=255), nullable=False),
    sa.Column('local_path', sa.String(length=500), nullable=True),
    sa.Column('status', sa.Enum('PENDENTE', 'APROVADO', 'REJEITADO', name='attestationstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('aprovado_por', sa.Integer(), nullable=True),
    sa.Column('data_aprovacao', sa.DateTime(), nullable=True),
    sa.Column('motivo_rejeicao', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['aprovado_por'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('titulo', sa.String(length=200), nullable=False),
    sa.Column('mensagem', sa.Text(), nullable=False),
    sa.Column('tipo', sa.Enum('INFO', 'WARNING', 'ERROR', 'SUCCESS', name='notificationtype'), nullable=False),
    sa.Column('lida', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('overtime_limits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_type', sa.Enum('ADMIN', 'TRABALHADOR', 'ESTAGIARIO', name='usertype'), nullable=True),
    sa.Column('work_class_id', sa.Integer(), nullable=True),
    sa.Column('daily_limit', sa.Float(), nullable=False),
    sa.Column('weekly_limit', sa.Float(), nullable=False),
    sa.Column('monthly_limit', sa.Float(), nullable=False),
    sa.Column('yearly_limit', sa.Float(), nullable=False),
    sa.Column('requires_approval_after', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['work_class_id'], ['work_classes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('overtime_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('estimated_hours', sa.Float(), nullable=False),
    sa.Column('overtime_type', sa.Enum('NORMAL', 'URGENTE', 'PLANEJADA', 'FERIADO', 'DOMINGO', 'NOTURNA', name='overtimetype'), nullable=False),
    sa.Column('justification', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('PENDENTE', 'APROVADA', 'REJEITADA', 'CANCELADA', name='overtimestatus'), nullable=False),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('actual_hours', sa.Float(), nullable=True),
    sa.Column('multiplier_applied', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('overtime_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('max_daily_overtime', sa.Float(), nullable=False),
    sa.Column('max_weekly_overtime', sa.Float(), nullable=False),
    sa.Column('max_monthly_overtime', sa.Float(), nullable=False),
    sa.Column('requires_approval', sa.Boolean(), nullable=False),
    sa.Column('auto_approval_limit', sa.Float(), nullable=False),
    sa.Column('overtime_multiplier_normal', sa.Float(), nullable=False),
    sa.Column('overtime_multiplier_urgent', sa.Float(), nullable=False),
    sa.Column('overtime_multiplier_holiday', sa.Float(), nullable=False),
    sa.Column('overtime_multiplier_sunday', sa.Float(), nullable=False),
    sa.Column('overtime_multiplier_night', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('security_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('acao', sa.String(length=100), nullable=False),
    sa.Column('detalhes', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('sucesso', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_approval_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDENTE', 'APROVADO', 'REJEITADO', name='approvalstatus'), nullable=False),
    sa.Column('requested_at', sa.DateTime(), nullable=False),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('user_message', sa.Text(), nullable=True),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('time_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('data', sa.Date(), nullable=False),
    sa.Column('entrada', sa.Time(), nullable=True),
    sa.Column('saida_almoco', sa.Time(), nullable=True),
    sa.Column('volta_almoco', sa.Time(), nullable=True),
    sa.Column('saida', sa.Time(), nullable=True),
    sa.Column('horas_trabalhadas', sa.Float(), nullable=True),
    sa.Column('horas_extras', sa.Float(), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('localizacao', sa.String(length=255), nullable=True),
    sa.Column('is_atestado', sa.Boolean(), nullable=True),
    sa.Column('atestado_id', sa.Integer(), nullable=True),
    sa.Column('motivo_atestado', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('edited_by', sa.Integer(), nullable=True),
    sa.Column('justificativa_edicao', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['atestado_id'], ['medical_attestations.id'], ),
    sa.ForeignKeyConstraint(['edited_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('time_records', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_time_records_data'), ['data'], unique=False)

    op.create_table('hour_bank_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.Enum('CREDITO', 'DEBITO', 'COMPENSACAO', 'AJUSTE', 'EXPIRAÇÃO', name='hourbanktransactiontype'), nullable=False),
    sa.Column('hours', sa.Float(), nullable=False),
    sa.Column('balance_before', sa.Float(), nullable=True),
    sa.Column('balance_after', sa.Float(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('reference_date', sa.Date(), nullable=True),
    sa.Column('overtime_request_id', sa.Integer(), nullable=True),
    sa.Column('time_record_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['overtime_request_id'], ['overtime_requests.id'], ),
    sa.ForeignKeyConstraint(['time_record_id'], ['time_records.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hour_compensations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('requested_date', sa.Date(), nullable=False),
    sa.Column('hours_to_compensate', sa.Float(), nullable=False),
    sa.Column('justification', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDENTE', 'APLICADA', 'CANCELADA', name='compensationstatus'), nullable=False),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('applied_at', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('hour_bank_transaction_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['hour_bank_transaction_id'], ['hour_bank_transactions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('hour_compensations')
    op.drop_table('hour_bank_transactions')
    with op.batch_alter_table('time_records', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_time_records_data'))

    op.drop_table('time_records')
    op.drop_table('user_approval_requests')
    op.drop_table('security_logs')
    op.drop_table('overtime_settings')
    op.drop_table('overtime_requests')
    op.drop_table('overtime_limits')
    op.drop_table('notifications')
    op.drop_table('medical_attestations')
    op.drop_table('hour_bank')
    with op.batch_alter_table('file_uploads', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_file_uploads_filename'))

    op.drop_table('file_uploads')
    op.drop_table('backup_history')
    op.drop_table('work_classes')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index(batch_op.f('ix_users_cpf'))

    op.drop_table('users')
    op.drop_table('system_status')
    op.drop_table('system_configs')
    # ### end Alembic commands ###
